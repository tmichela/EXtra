name: Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
  release:
    types:
      - published

env:
  PIP_CONSTRAINT: "${{ GITHUB_WORKSPACE }}/.github/dependabot/constraints.txt"

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/dependabot/constraints.txt') }}

    - name: Install dependencies
      # Note that we do an editable install so that coverage can look at the files in src/
      run: |
        python3 -m pip install -e .[test] --constraint .github/dependabot/constraints.txt

    - name: Test with pytest
      run: |
        python3 -m pytest --cov=src/ --cov-report=xml .
      env:
        CALCAT_OAUTH_CREDS: ${{ secrets.CALCAT_OAUTH_CREDS }}


  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

          #      - name: Set up Python 3.10
          #        uses: actions/setup-python@v4
          #        with:
          #          python-version: "3.10"

          #      - name: Build sdist
          #        run: |
          #          python3 -m pip install build
          #          python3 -m build --sdist

          #      - name: build wheel
          #        uses: pypa/cibuildwheel@v2.19.2
          #        env:
          #          CIBW_BUILD: cp310-*

      - name: show constraints
        run: |
          cat .github/dependabot/constraints.txt
          cat "${{ env.PIP_CONSTRAINT }}"

#      - name: Build wheels
#        uses: pypa/cibuildwheel@v2.19.2
#        env:
#          CIBW_BUILD: cp310-*
#          CIBW_SKIP: "*-musllinux_*  pp*"

      - name: Build sdist
        run: pipx run build --sdist

#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          path: ./wheelhouse/*.whl
#          name: wheel

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: dist

      - uses: actions/download-artifact@v4
        with:
          path: output
          merge-multiple: true

      - name: list artifacts
        run: |
          ls -hla ./output


  yo:
    runs-on: ubuntu-latest
    needs: [tests, publish]
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write  # OIDC for uploading to PyPI

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

